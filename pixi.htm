<html>
<head>
	<title>openEtG</title>
	<style>
		body {
			background-color: #000000;
		}
	</style>
	<script src="pixi.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script src="etg.js"></script>
</head>
<body>
	<script>
	var Cards, Targeting, targetingMode, targetingModeCb;
	loadcards(function(cards, targeting) { Cards = cards, Targeting = targeting });
	var m_w = 0, m_z = 987654321;
	function seed(i) {
		m_w = i;
	}
	function random()
	{
		var mask = 0xffffffff;
		m_z = (36969 * (m_z & 65535) + (m_z >> 16)) & mask;
		m_w = (18000 * (m_w & 65535) + (m_w >> 16)) & mask;
		var result = ((m_z << 16) + m_w) & mask;
		result /= 4294967296;
		return result + 0.5;
	}
	function shuffle(array) {
		var counter = array.length, temp, index;
		while (counter--) {
			index = (random() * counter) | 0;
			temp = array[counter];
			array[counter] = array[index];
			array[index] = temp;
		}
		return array;
	}
	function getTarget(active, cb){
		var tmode = Targeting[active];
		if (targetingMode == -1){
			cb()
		}else{
			targetingMode = tmode;
			targetingModeCb = cb;
		}
	}
	var renderer = PIXI.autoDetectRenderer(920, 540);
	document.body.appendChild(renderer.view);
	var id = null;
	var menuui = new PIXI.Stage(0x336699, true);
	var gameui = new PIXI.Stage(0x336699, true);
	var mainStage = menuui;

	var nopic = PIXI.Texture.fromImage("bunny.png");
	cimgcache = {};
	function getCardImage(code){
		if (code in cimgcache)return cimgcache[code];
		else{
			var loader = new PIXI.AssetLoader(["cards/"+code+".png"]);
			loader.onComplete = function() { cimgcache[code]=new PIXI.Texture.fromImage("cards/"+code+".png"); };
			loader.load();
			return nopic;
		}
	}
	var deck = ['4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4vc', '4ve', '4ve', '4ve', '4ve', '4ve', '4vf', '4vf', '4vf', '4vf', '4vf'];

	var bpvp = new PIXI.Sprite(nopic);
	bpvp.position.x = 200;
	bpvp.position.y = 200;
	bpvp.setInteractive(true);
	menuui.addChild(bpvp);
	bpvp.click = function(x) {
		if (id != null && Cards != null){
			socket.emit("pvpwant", {id: id});
		}
	};
	var handsprite = new Array(8);
	for (var i=0; i<8; i++){
		handsprite[i] = new PIXI.Sprite(nopic);
		handsprite[i].position.x=600;
		handsprite[i].position.y=200+20*i;
		handsprite[i].setInteractive(true);
		handsprite[i].click = function (x){
			var index = handsprite.indexOf(this);
			var card = player1.hand[index];
			if (card){
				if (card.type != Spell){
					summon(card, player1);
				}else{
					getTarget(card.active, function (tgt) {
						summon(card, player1, tgt);
					});
				}
				player1.hand.splice(index,1);
			}
		}
		gameui.addChild(handsprite[i]);
	}
	var creasprite = new Array(23);
	for (var i=0; i<23; i++){
		creasprite[i] = new PIXI.Sprite(nopic);
		creasprite[i].position.x=100+i*20;
		creasprite[i].position.y=300;
		creasprite[i].setInteractive(true);
		creasprite[i].click = function (x){
			var index = creasprite.indexOf(this);
			if (targetingMode == Creature || targetingMode == 6){
				targetingModeCb(player1.creatures[index]);
				targetingMode = -1;
			}
		}
		gameui.addChild(creasprite[i]);
	}
	var socket = io.connect('http://localhost');
	socket.on("idgive", function(data) {
		id = data.id;
	});
	socket.on("pvpgive", function(data) {
		foeId = data.foeId;
		player1 = new Player();
		player2 = new Player();
		player1.deck = shuffle(deck).slice(0);
		for(var i=0;i<7;i++){
			player1.hand[i] = Cards[player1.deck.pop()];
		}
		seed(data.seed);
		mainStage = gameui;
	});

	function animate() {
		if (mainStage == gameui){
			for(var i=0;i<8;i++){
				if (player1.hand[i]){
					handsprite[i].setTexture(getCardImage(player1.hand[i].code));
				}else handsprite[i].setTexture(nopic);
			}
			for(var i=0;i<23;i++){
				if (player1.creatures[i]){
					creasprite[i].setTexture(getCardImage(player1.creatures[i]));
				}else creasprite[i].setTexture(nopic);
			}
		}
	    renderer.render(mainStage);
		requestAnimFrame(animate);
	}
	requestAnimFrame(animate);
	</script>
</body>
</html>
